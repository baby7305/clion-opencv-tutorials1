cmake_minimum_required(VERSION 3.16.0)

project(helloworld VERSION 1.0.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

find_package(Qt6 COMPONENTS Widgets REQUIRED)
find_package(OpenCV REQUIRED)

include_directories(${OpenCV_INCLUDE_DIRS})

add_executable(example_02-01
    example_02-01.cpp
)
add_executable(example_02-03
        example_02-03.cpp
        )
add_executable(example_02-04
        example_02-04.cpp
        )
add_executable(example_02-05
        example_02-05.cpp
        )
add_executable(example_02-06
        example_02-06.cpp
        )
add_executable(example_02-07
        example_02-07.cpp
        )
add_executable(example_02-08
        example_02-08.cpp
        )
add_executable(example_02-09
        example_02-09.cpp
        )
add_executable(example_02-10
        example_02-10.cpp
        )

target_link_libraries(example_02-01
        PRIVATE Qt6::Widgets
        PRIVATE ${OpenCV_LIBS}
        )
target_link_libraries(example_02-03
        PRIVATE Qt6::Widgets
        PRIVATE ${OpenCV_LIBS}
        )
target_link_libraries(example_02-04
        PRIVATE Qt6::Widgets
        PRIVATE ${OpenCV_LIBS}
        )
target_link_libraries(example_02-05
        PRIVATE Qt6::Widgets
        PRIVATE ${OpenCV_LIBS}
        )
target_link_libraries(example_02-06
        PRIVATE Qt6::Widgets
        PRIVATE ${OpenCV_LIBS}
        )
target_link_libraries(example_02-07
        PRIVATE Qt6::Widgets
        PRIVATE ${OpenCV_LIBS}
        )
target_link_libraries(example_02-08
        PRIVATE Qt6::Widgets
        PRIVATE ${OpenCV_LIBS}
        )
target_link_libraries(example_02-09
        PRIVATE Qt6::Widgets
        PRIVATE ${OpenCV_LIBS}
        )
target_link_libraries(example_02-10
        PRIVATE Qt6::Widgets
        PRIVATE ${OpenCV_LIBS}
        )

SET(IMAGES ${CMAKE_SOURCE_DIR}/fruits.jpg)
SET(IMAGES ${CMAKE_SOURCE_DIR}/tree.avi)
SET(IMAGES ${CMAKE_SOURCE_DIR}/faces.png)
FILE(COPY ${IMAGES} DESTINATION .)
FILE(COPY ${IMAGES} DESTINATION "Debug")
FILE(COPY ${IMAGES} DESTINATION "Release")